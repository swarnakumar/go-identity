{
  "swagger": "2.0",
  "info": {
    "title": "users/v1/users.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UsersService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application.json"
  ],
  "paths": {
    "/v1/users/change-password": {
      "post": {
        "operationId": "UsersService_ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/generate-token": {
      "post": {
        "operationId": "UsersService_GenerateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1GenerateTokenRequest"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/me": {
      "get": {
        "operationId": "UsersService_Me",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UserDetails"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "UsersService"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/v1/users/refresh-token": {
      "post": {
        "operationId": "UsersService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    },
    "/v1/users/verify-token": {
      "post": {
        "operationId": "UsersService_VerifyToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1TokenValidityMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1Token"
            }
          }
        ],
        "tags": [
          "UsersService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "currentPwd": {
          "type": "string"
        },
        "newPwd": {
          "type": "string"
        }
      }
    },
    "v1GenerateTokenRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "required": [
            "email"
          ]
        },
        "password": {
          "type": "string",
          "required": [
            "password"
          ]
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "v1Token": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "required": [
            "token"
          ]
        }
      },
      "required": [
        "token"
      ]
    },
    "v1TokenValidityMessage": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        }
      }
    },
    "v1UserDetails": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "isAdmin": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "lastLogin": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
